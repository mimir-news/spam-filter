apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: spam-filter
  name: spam-filter
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spam-filter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.1.0
        linkerd.io/proxy-version: stable-2.1.0
      labels:
        app: spam-filter
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/proxy-deployment: spam-filter
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: db-pooler
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: spamfilter
        - name: DB_USERNAME
          value: spamfilter
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: spamfilter.password
              name: db-credentials
        - name: CASHTAG_THRESHOLD
          value: "0.8"
        - name: RESULT_SAMPLE_RATE
          value: "0.01"
        - name: SERVICE_NAME
          value: spam-filter
        - name: SERVICE_VERSION
          value: "2.2"
        image: eu.gcr.io/mimir-185212/spam-filter:3.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: svc-port
            scheme: HTTP
          initialDelaySeconds: 70
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: spam-filter
        ports:
        - containerPort: 8080
          name: svc-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: svc-port
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_BIND_TIMEOUT
          value: 10s
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-proxy-api.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/linkerd-io/proxy:stable-2.1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: gcr-json-key
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        image: gcr.io/linkerd-io/proxy-init:stable-2.1.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
